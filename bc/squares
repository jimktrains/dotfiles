/* BC program squares
   This finds the exceptional solution y<k-1 and checks that John's
   conjecture holds if 1 is returned, whereas 0 is returned if it
   doesn't hold. I actually proved John's conjecture early 13th January 2012.
 */
define f(k){
auto y,x,z,p,count,m,n
n=k-1
m=k^2+1
p=m-1
for(y=1;y<n;y++){
  z=m*y^2+p
  x=sqrt(z)
  if(x*x==z){
    g=gcd(x,y)
    print "\n(k,x,y,gcd(x,y))=(",k,",",x,",",y,",",g,"):"
    count=testjpr(x,y,k,0)
    if(globala>1){
      print ",Type 2"
    }
  /*else{
      print ",Type 1"
    }*/
    return(1)
  }
}
return(0)
}

define g(m,n){
auto z,count,k,count1
count=0
count1=0
for(k=m;k<=n;k=k+1){
   z=f(k)
   if(z){
      if(globala==1){
         count=count+1
      }else{
         count1=count1+1
      }
   }
}
print "\n"
print "xcount=",count,", xxcount=",count1,"\n"
}
